name: Build and Publish Release

on:
  push:
    branches:
      - main
    tags:
      - '^v[0-9]+\.[0-9]+\.[0-9]+$'

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{github.ref}}
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - name: install dependency
        run: go get -d
      
      - name: test
        run: go test -v ./...


  build:
    
    needs: test
    strategy:
      matrix:
        os: [windows, darwin, linux]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64

    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{github.ref}}

        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
    
      - name: Build
        run: CGO_ENABLED=0 GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -v -o JumpServerSSHClient_${{ matrix.os }}_${{ matrix.arch }} main.go
      
      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: JumpServerSSHClient_${{ matrix.os }}_${{ matrix.arch }}
          path: JumpServerSSHClient_${{ matrix.os }}_${{ matrix.arch }}

  create_release:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.cr.outputs.upload_url }}
      current_tag: ${{ steps.current_tag.outputs.tag_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get previous tag
        id: previousTag
        run: |
          name=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | tail -2 | head -1)
          echo "previousTag: $name"
          echo "previousTag=$name" >> $GITHUB_ENV

      - name: Get current tag
        id: current_tag
        run: |
          echo "Current tag: $(git describe --tags --abbrev=0)"
          echo "::set-output name=tag_name::$(git describe --tags --abbrev=0)"

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          fromTag: ${{ steps.current_tag.outputs.tag_name }}
          toTag: ${{ env.previousTag }}
          writeToFile: false
          excludeTypes: build,docs,other,style,chore

      - name: Create Release
        id: cr
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name:  ${{ steps.current_tag.outputs.tag_name }}
          release_name: Release  ${{ steps.current_tag.outputs.tag_name }}
          body: ${{ steps.changelog.outputs.changes }}
          draft: false
          prerelease: false
      
          
  publish:
    needs: create_release
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        os: [windows, darwin, linux]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64
    
    steps:
        
      # Download and extract the archive artifact from the build job
      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: JumpServerSSHClient_${{ matrix.os }}_${{ matrix.arch }}
          path: build/

      - name: Debug outputs
        run: |
          echo "Create release job outputs: ${{ toJson(needs.create_release.outputs) }}"
          echo "Create release job output variables: ${{ toJson(needs.create_release.outputs.upload_url) }}"
          echo "Create release job output variables: ${{ toJson(github) }}"
          
      # Upload all binary files to the newly created release
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url:  ${{ needs.create_release.outputs.upload_url }}
          asset_path: build/JumpServerSSHClient_${{ matrix.os }}_${{ matrix.arch }}
          asset_name: JumpServerSSHClient_${{ matrix.os }}_${{ matrix.arch }}_${{ needs.create_release.outputs.current_tag }}
          asset_content_type: application/octet-stream
    
